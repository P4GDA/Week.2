comp2
str(comp2)
str(df)
comp2 <- compare %>%
as.data.frame() %>%
rename(A=ZnfContentBaudat, B=ZnfContentBerg2010) %>%
pivot_wider(A, B, names_prefix="val")
comp2
comp2 <- compare %>%
as.data.frame() %>%
rename(A=ZnfContentBaudat, B=ZnfContentBerg2010)
comp2
str(comp2)
str(df)
df
comp2 <- compare %>%
as.data.frame() %>%
rename(key=ZnfContentBaudat, value=ZnfContentBerg2010)
comp2
str(comp2)
str(df)
comp2 <- compare %>%
as.data.frame() %>%
rename(key=ZnfContentBaudat, value=ZnfContentBerg2010) %>%
pivot_wider(key, value, names_prefix="val")
comp2
comp2 <- compare %>%
as.data.frame() %>%
#rename(key=ZnfContentBaudat, value=ZnfContentBerg2010) %>%
#pivot_wider(key, value, names_prefix="val")
pivot_wider(ZnfContentBaudat, ZnfContentBerg2010, names_prefix="val")
comp2
dd <- df %>%
rename(A=key, B=value) %>%
pivot_wider(A, B, names_prefix="val")
dd
dd <- df %>%
rename(A=key, B=value) %>%
pivot_wider(names_from=A, values_from=B, names_prefix="val")
df
dd
?pivot_wider
dd <- df %>%
rename(A=key, B=value) %>%
spread(A, B)
dd <- df %>%
rename(A=key, B=value) %>%
mutate(n=row_number()) %>%
spread(A, B)
dd
?pivot_longer
dd <- df %>%
rename(A=key, B=value) %>%
mutate(n=row_number()) %>%
spread(A, B) %>%
select(-n) %>%
pivot_longer(cols=everything(), names_to="A", values_to="B")
dd
dd <- df %>%
rename(A=key, B=value) %>%
mutate(n=row_number()) %>%
spread(A, B) %>%
select(-n) %>%
pivot_longer(cols=everything(), names_to="A", values_to="B", na.rm=T)
comp2 <- compare %>%
as.data.frame() %>%
mutate(TEMP=row_number()) %>%
spread(ZnfContentBaudat, ZnfContentBerg2010)
comp2
comp2 <- compare %>%
as.data.frame() %>%
#mutate(TEMP=row_number()) %>%
spread(ZnfContentBaudat, ZnfContentBerg2010)
df <- data.frame(ColA=c("A", "B", "B", "C"), ColB=letters[23:26])
df
df.wide <- df %>%
pivot_wider(names_from=ColA, values_from=ColB)
df.wide
?pivot_wider
df.wide <- df %>%
pivot_wider(names_from=ColA, values_from=ColB, names_prefic="val")
df.wide <- df %>%
pivot_wider(names_from=ColA, values_from=ColB, names_prefix="val")
df.wide
df.wide <- df %>%
pivot_wider(names_from=ColA, values_from=ColB)
df.wide
df.wide %>% pivot_longer(everything(), names_to="ColA", values_to="ColB")
df.wide <- df %>%
pivot_wider(names_from=ColA, values_from=ColB, values_fn=list(dd)) %>%
unnest(cols=everything())
pivot_wider(names_from=ColA, values_from=ColB) %>% pivot_longer(everything(), names_to="ColA", values_to="ColB")
df
df.wide <- df %>%
pivot_wider(names_from=ColA, values_from=ColB, values_fn=list(dd))
df
df.wide
df.wide <- df %>%
pivot_wider(names_from=ColA, values_from=ColB, values_fn=list)
df.wide
df.wide$B
?mutate
?mutate_all
unlist(df.wide$B)
df.wide <- df %>%
pivot_wider(names_from=ColA, values_from=ColB, values_fn=list) %>%
mutate_all(unlist())
?colwise
?across
df.wide <- df %>%
pivot_wider(names_from=ColA, values_from=ColB, values_fn=list) %>%
mutate(across(unlist()))
df
df.wide <- df %>%
pivot_wider(ColA, ColB)
df.wide
df.wide <- df %>%
pivot_wider(ColA, ColB,names_prefix="val")
df.widee
df.wide
df.wide <- df %>%
pivot_wider(names_from=ColA, values_from=ColB, values_fn=list) %>%
#mutate(across(unlist()))
#unnest(cols=everything())
pivot_longer(everything(), names_to="ColA", values_to="ColB")
df.wide
df.wide <- df %>%
pivot_wider(names_from=ColA, values_from=ColB, values_fn=list) %>%
#mutate(across(unlist()))
#unnest(cols=everything())
pivot_longer(everything(), names_to="ColA", values_to="ColB") %>%
unnest(cols=everything())
df.wide
?unnest
starwards
starwars
g1
df.wide <- df %>%
pivot_wider(names_from=ColA, values_from=ColB, values_fn=list) %>%
mutate(across(everything(), unlist))
df.wide
df.wide <- df %>%
pivot_wider(names_from=ColA, values_from=ColB, values_fn=list)
df.wide
df.wide$B
unlist(df.wide$B)
paste0(unlist(df.wide$B))
paste0(unlist(df.wide$B), collapse="")
?unlist
df.wide <- df %>%
pivot_wider(names_from=ColA, values_from=ColB, values_fn=list) %>%
mutate(across(everything(), paste0(unlist, collapse="")))
paste0(df.wide$B, collapse="")
str_flatten(df.wide$B, "")
?str_c
df.wide <- df %>%
pivot_wider(names_from=ColA, values_from=ColB, values_fn=list) %>%
mutate(across(everything(), unlist))
df.wide <- df %>%
pivot_wider(names_from=ColA, values_from=ColB, values_fn=list) %>%
mutate(across(everything(), as.vector))
df.wie
df.wide
df.wide <- df %>%
pivot_wider(names_from=ColA, values_from=ColB, values_fn=list)
df.wide
?as.string
?as.vector
df.wide <- df %>%
pivot_wider(names_from=ColA, values_from=ColB, values_fn=list) %>%
mutate(across(everything(), as.character)) %>%
mutate
df.wide
df.wide <- df %>%
pivot_wider(names_from=ColA, values_from=ColB, values_fn=list) %>%
mutate(across(everything(), as.character)) %>%
mutate(across(everything(), unlist))
df.wide
df %>%
pivot_wider(names_from=ColA, values_from=ColB, values_fn=list) %>%
mutate(across(everything(), as.character))
df.wide <- df %>%
pivot_wider(names_from=ColA, values_from=ColB, values_fn=list) %>%
mutate(across(everything(), as.character)) %>%
mutate(across(everything(), gsub("c(", "")))
df.wide <- df %>%
pivot_wider(names_from=ColA, values_from=ColB, values_fn=list) %>%
mutate(across(everything(), as.character)) %>%
mutate(across(everything(), gsub("c(", "", .col)))
df.wide <- df %>%
pivot_wider(names_from=ColA, values_from=ColB, values_fn=list) %>%
mutate(across(everything(), as.character)) %>%
mutate(across(everything(), gsub("c(", "", var)))
?across
df.wide <- df %>%
pivot_wider(names_from=ColA, values_from=ColB, values_fn=list) %>%
mutate(across(everything(), as.character)) %>%
mutate(across(everything(), gsub("c(", "", .cols)))
df.wide <- df %>%
pivot_wider(names_from=ColA, values_from=ColB, values_fn=list) %>%
mutate(across(everything(), as.character)) %>%
mutate(across(everything(), gsub("c(", "", x)))
df %>%
pivot_wider(names_from=ColA, values_from=ColB, values_fn=list) %>%
mutate(c_across(everything(), as.character))
df %>%
pivot_wider(names_from=ColA, values_from=ColB, values_fn=list) %>%
mutate(c_across(everything(), unlist))
?c_across
df %>%
pivot_wider(names_from=ColA, values_from=ColB, values_fn=list) %>%
mutate(c_across(everything()))
df %>%
pivot_wider(names_from=ColA, values_from=ColB, values_fn=list) %>%
mutate(across(everything(), as.character))
df %>%
pivot_wider(names_from=ColA, values_from=ColB, values_fn=list) %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(cols=everything(), names_to="ColA", values_to="ColB")
df %>%
pivot_wider(names_from=ColA, values_from=ColB, values_fn=list(ColB=list))
df %>%
pivot_wider(names_from=ColA, values_from=ColB, values_fn=list(ColB=list)) %>%
mutate_all(unlist)
df.wide <- df %>%
pivot_wider(names_from=ColA, values_from=ColB, values_fn=list) %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(cols=everything(), names_to="ColA", values_to="ColB")
df.wide
df.wide <- df %>%
pivot_wider(names_from=ColA, values_from=ColB, values_fn=list) %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(cols=everything(), names_to="ColA", values_to="ColB") %>%
mutate(ColB=ifelse(grepl(",", ColB), gsub("c(", ""), ColB))
df.wide <- df %>%
pivot_wider(names_from=ColA, values_from=ColB, values_fn=list) %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(cols=everything(), names_to="ColA", values_to="ColB") %>%
mutate(ColB=ifelse(grepl(",", ColB), gsub("c(", "", ColB), ColB))
df.wide <- df %>%
pivot_wider(names_from=ColA, values_from=ColB, values_fn=list) %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(cols=everything(), names_to="ColA", values_to="ColB") %>%
mutate(ColB=ifelse(grepl(",", ColB), gsub("c\(", "", ColB), ColB))
df.wide <- df %>%
pivot_wider(names_from=ColA, values_from=ColB, values_fn=list) %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(cols=everything(), names_to="ColA", values_to="ColB") %>%
mutate(ColB=ifelse(grepl(",", ColB), gsub("c\\(", "", ColB), ColB))
df.wide
df.wide <- df %>%
pivot_wider(names_from=ColA, values_from=ColB, values_fn=list) %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(cols=everything(), names_to="ColA", values_to="ColB") %>%
mutate(ColB=ifelse(grepl(",", ColB), gsub("[[\\,\"]]"", "", gsub("c\\(", "", ColB)), ColB))
df %>%
pivot_wider(names_from=ColA, values_from=ColB, values_fn=list(ColB=list)) %>%
mutate_all(unlist)
mutate(c_across(everything(), gsub("c(", "", x)))
#mutate(across(unlist()))
#unnest(cols=everything())
pivot_longer(everything(), names_to="ColA", values_to="ColB") %>%
unnest(cols=everything())
df.wide <- df %>%
pivot_wider(names_from=ColA, values_from=ColB, values_fn=list) %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(cols=everything(), names_to="ColA", values_to="ColB")
df.wide
df.wide$ColB
df.wide$ColB[2]
v <- df.wide$ColB[2]
gsub("[[\\,\\"]]", "", v)
gsub("[\\,\\"]", "", v)
gsub('[\\,\\"]'', "", v)
()
)
gergv
f
.
,
m
34
3f?
""
''
gsub('[\\,\\"]', "", v)
gsub('[\\,\\")]', "", v)
gsub('[\\,\\")"]', "", v)
gsub('[\\,\\")]&c(', "", v)
gsub('[\\,\\")]&c\(', "", v)
gsub('[\\,\\")]&c\\(', "", v)
gsub('[\\,\\")"]', "", v)
df
df %>%
pivot_wider(names_from=ColA, values_from=ColB, values_fn=list) %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(cols=everything(), names_to="ColA", values_to="ColB")
df %>%
pivot_wider(names_from=ColA, values_from=ColB, values_fn=list) %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(cols=everything(), names_to="ColA", values_to="ColB") %>%
mutate(across(cols=everything(), as.character))
df %>%
pivot_wider(names_from=ColA, values_from=ColB, values_fn=list) %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(cols=everything(), names_to="ColA", values_to="ColB") %>%
mutate(across(everything(), as.character))
df %>%
pivot_wider(names_from=ColA, values_from=ColB, values_fn=list) %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(cols=everything(), names_to="ColA", values_to="ColB") %>%
mutate(across(everything(), as.vector))
df %>%
pivot_wider(names_from=ColA, values_from=ColB, values_fn=list) %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(cols=everything(), names_to="ColA", values_to="ColB") %>%
mutate(across(everything(), paste0))
df
d
df
df %>%
group_by(ColA) %>%
summarize(ColB=paste0(ColB, collapse=""))
df %>%
group_by(ColA) %>%
summarize(ColC=paste0(ColB, collapse=""))
compare <- baudat.split %>%
inner_join(berg2010.split,
by=c("Allele", "Position"),
suffix=c("Baudat", "Berg2010")) %>%
select(-c(Allele, Position)) %>%
distinct()
compare
compare <- baudat.split %>%
left_join(berg2010.split,
by=c("Allele", "Position"),
suffix=c("Baudat", "Berg2010")) %>%
select(-c(Allele, Position)) %>%
distinct()
compare
View(compare)
compare <- baudat.split %>%
left_join(berg2010.split,
by=c("Allele", "Position"),
suffix=c("Baudat", "Berg2010"))
compare <- baudat.split %>%
left_join(berg2010.split,
by=c("Allele", "Position"),
suffix=c("Baudat", "Berg2010")) %>%
select(-c(Allele, Position)) %>%
distinct()
compare <- baudat.split %>%
left_join(berg2010.split,
by=c("Allele", "Position"),
suffix=c("Baudat", "Berg2010")) %>%
select(-c(Position)) %>%
distinct()
compare <- baudat.split %>%
left_join(berg2010.split,
by=c("Allele", "Position"),
suffix=c("Baudat", "Berg2010")) %>%
select(-c(Position)) %>%
pivot_wider(names_from=ZnfContentBaudat, values_from=ZnfContentBerg2010)
compare <- baudat.split %>%
left_join(berg2010.split,
by=c("Allele", "Position"),
suffix=c("Baudat", "Berg2010")) %>%
select(-c(Position)) %>%
group_by(ZnfContentBaudat) %>%
summarize(ZnfContentBerg2010=paste0(ZnfContentBerg2010, collapse=""))
?paste0
baudat.split %>%
left_join(berg2010.split,
by=c("Allele", "Position"),
suffix=c("Baudat", "Berg2010")) %>%
select(-c(Position))
compare <- baudat.split %>%
left_join(berg2010.split,
by=c("Allele", "Position"),
suffix=c("Baudat", "Berg2010")) %>%
select(-c(Position))
compare <- baudat.split %>%
left_join(berg2010.split,
by=c("Allele", "Position"),
suffix=c("Baudat", "Berg2010")) %>%
select(-c(Position)) %>%
mutate(ZnfContentBerg2010=gsub("NA", "DEL" ZnfContentBerg2010))
?gsub
compare <- baudat.split %>%
left_join(berg2010.split,
by=c("Allele", "Position"),
suffix=c("Baudat", "Berg2010")) %>%
select(-c(Position))
compare <- baudat.split %>%
left_join(berg2010.split,
by=c("Allele", "Position"),
suffix=c("Baudat", "Berg2010")) %>%
select(-c(Position, Allele)) %>%
summarize(n())
compare <- baudat.split %>%
left_join(berg2010.split,
by=c("Allele", "Position"),
suffix=c("Baudat", "Berg2010")) %>%
select(-c(Position, Allele)) %>%
group_by(ZnfContentBaudat) %>%
summarize(n())
compare <- baudat.split %>%
left_join(berg2010.split,
by=c("Allele", "Position"),
suffix=c("Baudat", "Berg2010")) %>%
select(-c(Position, Allele))
table(compare)
str(table(compare))
10-0
10+10
50-10-10
23526673-23527764
knitr::opts_chunk$set(echo = TRUE, error = TRUE, warning = TRUE)
library(ottr)
library(testthat)
. = ottr::check("tests/Tutorial.W2.1.1.c.R")
setwd("~/Documents/C4G/course-github/Week.2/2.1.Built-in.Functions/")
x <- -5894
# Write and execute your code here
abs_x <- abs(x)
abs_x
. = ottr::check("tests/Tutorial.W2.1.1.b.R")
x <- -5894
# Write and execute your code here
abs_x <- mean(x)
. = ottr::check("tests/Tutorial.W2.1.1.b.R")
x <- -5894
# Write and execute your code here
abs_x <- sqrt(x)
abs_x
x <- -5894
# Write and execute your code here
abs_x <- mean(x)
x <- -5894
# Write and execute your code here
abs_x <- abs(x)
. = ottr::check("tests/Tutorial.W2.1.1.b.R")
x <- -5894
# Write and execute your code here
abs_x <- mean(x)
. = ottr::check("tests/Tutorial.W2.1.1.b.R")
x <- 5
expect_equal(x, 10)
x <- "hi"
expect_equal(x, "hey")
plate <- read.csv("~/Documents/OICR/OHS/Final-Samples/Genome_QC_Plate_Manifest_DNA_Template.csv", header=T)
colnames(plate)
View(plate)
plate <- read.csv("~/Documents/OICR/OHS/Final-Samples/Genome_QC_Plate_Manifest_DNA_Template.csv", header=T) %>%
select(Researcher.ID, Parent.Buffy.Inventory.Id, Position..Well.)
library(dplyr)
library(tidyr)
plate <- read.csv("~/Documents/OICR/OHS/Final-Samples/Genome_QC_Plate_Manifest_DNA_Template.csv", header=T) %>%
select(Researcher.ID, Parent.Buffy.Inventory.Id, Position..Well.)
colnames(plate) <- c("ID", "Buffy.ID", "Plate")
ethno <- read.csv("~/Documents/OICR/OHS/Final-Samples/Sample-Names-Genos-QCWells.csv")
View(ethno)
colnames(ethno) <- c("Buffy.ID", "Plate", "Ethnicity", "Genotype")
merged <- plate %>%
full_join(ethno)
View(merged)
write.csv(merged, "~/Documents/OICR/OHS/Final-Samples/samples-both-IDs-ethnicity-genotypes.csv", header=T, row.names=F, quote=F)
write.csv(merged, "~/Documents/OICR/OHS/Final-Samples/samples-both-IDs-ethnicity-genotypes.csv", row.names=F, quote=F)
ref <- read.table("~/Documents/GQ/AWA4634-5567.ref.cov", header=F, colnames=c("Chr", "Pos", "RefNum"))
alt <- read.table("~/Documents/GQ/AWA4634-4005.alt.cov", header=F, colnames=c("Chr", "Pos", "AltNum"))
ref <- read.table("~/Documents/GQ/AWA4634-5567.ref.cov", header=F, col.names=c("Chr", "Pos", "RefNum"))
alt <- read.table("~/Documents/GQ/AWA4634-4005.alt.cov", header=F, col.names=c("Chr", "Pos", "AltNum"))
refalt <- full_join(ref, alt)
View(refalt)
refalt %>% filter(RefNum>0) %>% head()
refalt %>% filter(AltNum>0) %>% head()
refalt %>% filter(Pos>=23525937) %>% head()
refalt %>% filter(Pos>=23525937) %>% View
refalt %>% filter(Pos>=23525937, Pos<=23528011) %>% View
refalt <- full_join(ref, alt) %>%
filter(Pos>=23525937, Pos<=23528011)
library(ggplot2)
ref <- read.table("~/Documents/GQ/AWA4634-5567.ref.cov", header=F, col.names=c("Chr", "Pos", "Num")
)
alt <- read.table("~/Documents/GQ/AWA4634-4005.alt.cov", header=F, col.names=c("Chr", "Pos", "Num"))
refalt <- ref %>%
mutate(Sample="Ref") %>%
full_join(alt %>% mutate(Sample="Alt")) %>%
filter(Pos>=23525937, Pos<=23528011)
ggplot(refalt, aes(x=Pos, y=Num)) +
geom_point(aes(color=Sample))
ggplot(refalt, aes(x=Pos, y=Num)) +
geom_line(aes(color=Sample))
ggplot(refalt, aes(x=Pos, y=Num)) +
geom_line(alpha=0.5, aes(color=Sample))
ggplot(refalt, aes(x=Pos, y=Num)) +
theme_bw() +
geom_line(alpha=0.5, aes(color=Sample))
8000/100
8000*0.08
8000*0.008
8000*0.18
8000*0.018
8000*0.01
8000*0.019
8000*0.014
8000*0.013
8000*0.012
install.packages("rstudioapi")
install.packages("rstudioapi")
rstudioapi::addTheme("https://github.com/DesiQuintans/Pebble-safe/releases/download/1.0.0/Pebble-Safe_Light.rstheme",
apply = TRUE, force = TRUE)
